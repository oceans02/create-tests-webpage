{"version":3,"sources":["components/header/header.component.jsx","components/footer/footer.component.jsx","components/form-input/form-input.component.jsx","components/custom-button/custom-button.component.jsx","components/create-test/create-test.component.jsx","components/dashboard/dashboard.component.jsx","pages/homepage/homepage.component.jsx","components/test-overview/test-item/test-item.component.jsx","components/test-overview/test-overview.component.jsx","pages/question-bank/question-bank.component.jsx","pages/test-review/test-review.component.jsx","components/edit-test/edit-test.component.jsx","components/course-mods/course-mod/course-mod.component.jsx","components/course-mods/course-mods.component.jsx","pages/courses/courses.component.jsx","components/course-detail/course-detail.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","children","className","to","Footer","FormInput","handleChange","label","formprops","type","onChange","value","length","CustomButton","inverted","otherProps","CreateTest","props","e","setState","target","name","handleSubmit","preventDefault","newId","state","dummyId","question","id","quest","answers","ansCollection","correctAns","mId","getQuestion","ans","addAnswer","isChecked","handleCheckbox","checked","onSubmit","this","required","onClick","map","eachAns","i","JSON","stringify","React","Component","Dashboard","HomePage","withRouter","history","slice","push","TestOverview","questionList","eachQuestion","QuestionBank","handleQuestionUpload","questionBank","showChild","TestReview","EditTest","CourseMod","eachCourse","style","color","CourseMods","courseModules","eachModule","CoursesPage","modules","questions","showHidden","handleHide","handleHidden","CourseDetail","console","log","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa5917b3.chunk.js","sourcesContent":["import './header.styles.scss';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Header = ({children, ...otherProps}) => (\r\n    <div className=\"header\">\r\n        <Link to=\"/\" className=\"logo\">\r\n            <p className=\"header-text\">ABC</p>\r\n        </Link>\r\n\r\n        <div className=\"header-sections\">\r\n            <Link to=\"/\" className=\"header-section\">Dashboard</Link>\r\n            <Link to=\"/course\" className=\"header-section\">Course Modules</Link>\r\n            <Link to=\"/tests\" className=\"header-section\">Test Questions</Link>\r\n            <Link to=\"/\" className=\"header-section\">Reviewers</Link>\r\n        </div>\r\n    </div>\r\n);","import './footer.styles.scss'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer-text\">Created for Demo purposes only</p>\r\n        </footer>\r\n    )\r\n}","import './form-input.styles.scss';\r\n\r\nexport const FormInput = ({handleChange, label, ...formprops}) => {\r\n    return(\r\n        <div className=\"group\">\r\n            <input type=\"text\" className=\"form-input\"\r\n                onChange= {handleChange} {...formprops} />\r\n            {label ? \r\n            (<label className={`${formprops.value.length ? 'shrink' : ''} form-input-label`}>\r\n            {label}</label>): null}\r\n        </div>\r\n    )\r\n}\r\n","import './custom-button.styles.scss'\r\n\r\nexport const CustomButton = ({children, inverted, ...otherProps}) => (\r\n    <div className={`${inverted ? 'inverted' : ''} custom-button`} {...otherProps}>{children}</div>\r\n)","import React from \"react\";\r\nimport { FormInput } from \"../form-input/form-input.component\";\r\nimport {CustomButton} from '../custom-button/custom-button.component';\r\nimport './create-test.styles.scss'\r\n\r\nclass CreateTest extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      quest: \"\",\r\n      ans: \"\",\r\n      ansCollection: [],\r\n      correctAns: \"\",\r\n      isChecked: false,\r\n      mId:'',\r\n      dummyId:1\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let newId = this.state.dummyId + 1;\r\n    \r\n    let question = {\r\n      id: newId,\r\n      question: this.state.quest,\r\n      answers: this.state.ansCollection,\r\n      correctAns: this.state.correctAns,\r\n      mId:this.state.mId,\r\n    }\r\n    this.props.getQuestion(question);\r\n\r\n    newId = newId + 1;\r\n    \r\n    this.setState({ quest: \"\", ans: \"\", ansCollection: [], dummyId: newId });\r\n  };\r\n\r\n  addAnswer = () => {\r\n    this.state.isChecked && this.setState({ correctAns: this.state.ans });\r\n    this.setState((state) => ({\r\n      ansCollection: [...state.ansCollection, state.ans],\r\n      ans: \"\",\r\n      isChecked: false\r\n    }));\r\n  };\r\n\r\n  handleCheckbox = (e) => {\r\n    this.setState({ isChecked: e.target.checked });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"test-question\">\r\n        <p className=\"title\">Create Single Test</p>\r\n\r\n        <form  className=\"test-form\" onSubmit={this.handleSubmit}>\r\n            <div className=\"question-section\">\r\n                <p className=\"labels\">Enter Question Data Below: </p>\r\n                <FormInput\r\n                    type=\"text\"\r\n                    value={this.state.quest}\r\n                    label=\"Enter Test Question\"\r\n                    name=\"quest\"\r\n                    handleChange={this.handleChange}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"answer-section\">\r\n                <p className=\"labels\">Enter Answer Options Below: (Check the correct answer)</p>               \r\n                <input\r\n                    type=\"checkbox\"\r\n                    className=\"checkboxs\"\r\n                    checked={this.state.isChecked}\r\n                    onChange={this.handleCheckbox}\r\n                />\r\n                <FormInput\r\n                    type=\"text\"\r\n                    value={this.state.ans}\r\n                    handleChange={this.handleChange}\r\n                    name=\"ans\"\r\n                    label=\"Enter Answer Option\"\r\n                />\r\n                <div className=\"buttons\">   \r\n                <CustomButton type=\"button\" onClick={this.addAnswer}>\r\n                    Add Answer\r\n                </CustomButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"answer-display\">          \r\n                  <p className=\"labels\">Answers: </p>\r\n                    {\r\n                      this.state.ansCollection.length < 1 ? \r\n                      (<p className=\"answer-list\">Options displayed here</p>) :\r\n                        this.state.ansCollection.map((eachAns, i) => (\r\n                      <li className=\"answer-list\" key={i}>{eachAns}</li>\r\n                    ))}        \r\n            </div>\r\n\r\n            <div className=\"correct-answer\">\r\n              <p className=\"labels\">Correct Answer: </p>\r\n              <FormInput type=\"text\"\r\n              name=\"correctAns\"\r\n              value={this.state.correctAns}\r\n              handleChange={this.handleChange} \r\n              label=\"Enter Correct Answer here\" />\r\n              </div>\r\n\r\n            <div className=\"test-module\">\r\n            <p className=\"labels\">Module Code: </p>\r\n              <FormInput \r\n                type=\"text\" \r\n                name=\"mId\" \r\n                value={this.state.mId} label=\"Enter Module Code\" \r\n                onChange={this.handleChange} />\r\n            </div>\r\n            \r\n\r\n            <CustomButton type=\"submit\" inverted onClick={this.handleSubmit}>\r\n                Submit\r\n            </CustomButton>\r\n            \r\n        </form>\r\n\r\n        {JSON.stringify(this.state)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTest;\r\n","import './dashboard.styles.scss';\r\n\r\nexport const Dashboard = () => (\r\n    <div className=\"dashboard\">\r\n        <h1>Dashboard</h1>\r\n        <p>Display some data here - Create Test Icon, Create Module Icon, Reviewers section</p>\r\n    </div>\r\n)","import { Dashboard } from \"../../components/dashboard/dashboard.component\";\r\n\r\nexport const HomePage = () => (\r\n    <div className=\"homepage\">\r\n        <Dashboard />\r\n    </div>\r\n)","import { CustomButton } from '../../custom-button/custom-button.component';\r\nimport './test-item.styles.scss';\r\n\r\nimport { withRouter } from 'react-router';\r\n\r\nconst TestItem = ({question,id, mId, history}) => {\r\n    return(\r\n    <div className=\"test-item\">\r\n        <div>\r\n            {question.length > 10 ? `${question.slice(0, 10)}...` : ''}  \r\n        </div>\r\n        <div>{mId.length > 4 ? `${mId.slice(0,10)}..` : ''}</div>\r\n        <div className=\"small-edit-button\">\r\n            <CustomButton \r\n                onClick={() => {history.push(`/tests/edit/${id}`)}}\r\n            >Edit</CustomButton>\r\n        </div>\r\n    </div>\r\n)}\r\n\r\nexport default withRouter(TestItem);","import  TestItem  from './test-item/test-item.component';\r\nimport './test-overview.styles.scss';\r\n\r\nexport const TestOverview =({questionList}) => {\r\n    return(\r\n        <div className=\"test-overview\">\r\n            {questionList.map((eachQuestion, id) => (\r\n                <TestItem key={id} {...eachQuestion} />))}\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport './question-bank.styles.scss';\r\n\r\nimport { withRouter } from 'react-router';\r\n\r\nimport CreateTest from \"../../components/create-test/create-test.component\";\r\nimport { TestOverview } from \"../../components/test-overview/test-overview.component\";\r\nimport {CustomButton} from '../../components/custom-button/custom-button.component'\r\n\r\nclass QuestionBank extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            questionBank:[\r\n                {   id:50,\r\n                    question:'What is react',\r\n                    answers:[\r\n                        \"A framework\",\r\n                        \"UI library\",\r\n                    \"All of above\"], \r\n                    correctAns:\"UI library\",\r\n                    mId:\"Mod-01\"},\r\n                {   id:51,\r\n                    question:'Who created React',\r\n                    answers:[\"Gixx\", \"Fixx\", \"Fb\"], \r\n                    correctAns:\"Fb\",\r\n                    mId:\"Mod-02\"},\r\n                {   id:52,\r\n                    question:'IS React easy to use?',\r\n                    answers:[\"yes\", \"no\", \"maybe\"], \r\n                    correctAns:\"yes\",\r\n                    mId:\"Mod-03\"}\r\n            ],\r\n            showChild:false\r\n        }\r\n    }\r\n\r\n    handleQuestionUpload = (question) => {\r\n        let {questionBank} = this.state;\r\n        this.setState({questionBank:[...questionBank, question]});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"question-bank\">\r\n                <p className=\"title\">Test Question Bank</p>\r\n                <TestOverview questionList = {this.state.questionBank} />\r\n                {\r\n                    this.state.showChild && <CreateTest getQuestion={this.handleQuestionUpload} />\r\n                }\r\n                <div className=\"small-create-button\">\r\n                    <CustomButton onClick={(state) => this.setState({showChild: !state.showChild})}>\r\n                        Create Test\r\n                    </CustomButton>\r\n                    {/* <CustomButton onClick={() => this.props.history.push(`${this.props.match.url}/create`)} >\r\n                        Create Test\r\n                    </CustomButton> */}\r\n                    <CustomButton onClick={() => this.props.history.push(\"/course\")}>Go To Modules</CustomButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(QuestionBank);","import './test-review.component.jsx';\r\n\r\nexport const TestReview = () => (\r\n    <div className=\"test-review\">\r\n        <p>Test Review</p>\r\n    </div>\r\n)","export const EditTest = () => (\r\n    <div className=\"test-edit-page\">\r\n        <p className=\"title\">Edit Test</p>\r\n        <p>Edit each test here</p>\r\n    </div>\r\n)\r\n","import './course-mod.styles.scss';\r\nimport {Link} from 'react-router-dom';\r\nimport { CustomButton } from '../../custom-button/custom-button.component';\r\n\r\nexport const CourseMod = ({eachCourse}) => {\r\n    return(\r\n        <div className=\"course-mod\">\r\n                <div className=\"colored-span\"></div>\r\n                <div className=\"container\">\r\n                    <h4 className=\"mod-id\">{eachCourse.mId}</h4>\r\n                    <div className=\"mod-title\">{eachCourse.name}</div>\r\n                    <div className=\"course-detail\">\r\n                        <Link style={{color:\"black\"}} to=\"/course/detail\">\r\n                            <CustomButton >Details</CustomButton>\r\n                        </Link></div>\r\n                </div>\r\n        </div>\r\n    )}\r\n\r\n    export default CourseMod;","import './course-mods.styles.scss';\r\nimport {CourseMod} from './course-mod/course-mod.component';\r\n\r\nconst CourseMods = ({courseModules}) => {\r\n    return(\r\n    <div className=\"course-mods\" >\r\n        <h2 className=\"title\">Course Modules</h2>\r\n        <div className=\"courses\">\r\n        {courseModules.map((eachModule) => (\r\n                <CourseMod key={eachModule.id} eachCourse={eachModule} />\r\n        ))}\r\n        </div>\r\n    </div>\r\n)}\r\n\r\nexport default CourseMods;","import React from 'react';\r\nimport  CourseMods  from '../../components/course-mods/course-mods.component';\r\n\r\nclass CoursesPage extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            modules:[\r\n                {id:20, mId:'Mod-01',name:\"English Language Module I\", questions:['test-question-1', 'test-question-1']},\r\n                {id:21, mId:'Mod-02',name:\"English Lang Module II\", questions:['test-question-a', 'test-question-b']},\r\n                {id:22, mId:'Mod-03',name:\"English Lang Module III\", questions:['test-question-100', 'test-question-1000']}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <CourseMods \r\n                courseModules={this.state.modules} \r\n                showHidden={this.state.showHidden}\r\n                handleHide= {this.handleHidden} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CoursesPage;","import './course-detail.styles.scss';\r\n\r\nexport const CourseDetail = ({questions}) => {\r\n    console.log(questions)\r\n    return(\r\n        <div className=\"course-detail\">\r\n            <h3>Course Detail</h3>\r\n            <p>List of questions displayed here</p>\r\n        </div>\r\n    )\r\n};","import './App.css';\nimport { Header } from './components/header/header.component';\nimport { Footer } from './components/footer/footer.component';\nimport { Route, Switch } from 'react-router';\n\nimport CreateTest from './components/create-test/create-test.component';\nimport {HomePage} from './pages/homepage/homepage.component';\nimport QuestionBank from './pages/question-bank/question-bank.component';\nimport { TestReview } from './pages/test-review/test-review.component';\nimport { EditTest } from './components/edit-test/edit-test.component';\nimport CoursesPage from './pages/courses/courses.component';\nimport {CourseDetail} from './components/course-detail/course-detail.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path='/tests' component={QuestionBank} />\n        <Route path=\"/tests/create\" component={CreateTest} />\n        <Route  path='/tests/edit/:id' component={EditTest} />\n        <Route exact path='/course' component={CoursesPage} />\n        <Route path=\"/course/detail\" component={CourseDetail} />\n        <Route exact path='/review' component={TestReview} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}